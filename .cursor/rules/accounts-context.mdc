---
description: Personal Accounts context and functionality
globs: apps/*/app/home/user,packages/features/accounts/**
alwaysApply: false
---

# Personal Account Context

This rule provides guidance for working with personal account related components in the application.

The user/personal account context in the application lives under the path `app/home/user`. Under this context, we identify the user using Supabase Auth.

We can use the `requireUser` to retrieve the relative Supabase User object and identify the user. [require-user.ts](mdc:packages/supabase/src/require-user.ts)

## Guidelines

### Components and Structure
- Personal account components are used in the `/home` route
- Reusable components should be in `packages/features/accounts/src/components`
- Settings-related components should be in `packages/features/accounts/src/components/personal-account-settings`

### Authentication Flow
- User authentication status is available via `useUser` hook
- Account deletion requires OTP verification
- Password updates may require reauthentication

### Feature Flags
- Personal account features are controlled via `featureFlagsConfig` [feature-flags.config.ts](mdc:apps/web/config/feature-flags.config.ts)
- Key flags: 
  - `enableAccountDeletion`
  - `enablePasswordUpdate`
  - `enablePersonalAccountBilling`
  - `enableNotifications`

## Personal Account API

The API for the personal account is [api.ts](mdc:packages/features/accounts/src/server/api.ts)

A class that provides methods for interacting with account-related data in the database. Initializes a new instance of the `AccountsApi` class with a Supabase client.

### AccountsApi
```typescript
constructor(client: SupabaseClient<Database>)
```

### Methods
- `getAccount(id: string)` - Get account by ID
- `getAccountWorkspace()` - Get current user's account workspace
- `loadUserAccounts()` - Get all accounts for current user
- `getSubscription(accountId: string)` - Get account subscription
- `getOrder(accountId: string)` - Get account order
- `getCustomerId(accountId: string)` - Get account customer ID

## Database

When applying Database rules [database.mdc](mdc:.cursor/rules/database.mdc) must ensure the authenticated user matches the account ID of the entity

```sql
account_id = (select auth.uid())
```
